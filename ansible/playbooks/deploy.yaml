---
- name: Deploy Docker application
  hosts: all
  become: true
  vars_files:
    - vars/main.yaml

  tasks:
    - name: Set app_data_path based on app_name
      ansible.builtin.set_fact:
        app_data_path: "/opt/{{ app_name }}/data"

    - name: Update apt package index
      ansible.builtin.apt:
        update_cache: yes

    - name: Install prerequisites
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Create keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Get Ubuntu codename
      ansible.builtin.command: . /etc/os-release && echo "$UBUNTU_CODENAME"
      register: ubuntu_codename
      changed_when: false

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc]
          https://download.docker.com/linux/ubuntu
          {{ ubuntu_codename.stdout }} stable
        state: present
        filename: docker
        update_cache: yes

    - name: Update apt package index again
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure Docker is running and enabled
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Verify Docker image exists
      ansible.builtin.command: docker manifest inspect {{ docker_image }}
      register: image_check
      ignore_errors: yes
      changed_when: false

    - name: Fail if image doesn't exist
      ansible.builtin.fail:
        msg: "Docker image {{ docker_image }} not found!"
      when: image_check.rc != 0

    - name: Create app directory structure
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "/opt/{{ app_name }}"
        - "{{ app_data_path }}"

    - name: Stop and remove existing containers
      community.docker.docker_compose_v2:
        project_src: "/opt/{{ app_name }}"
        state: absent
      ignore_errors: yes

    - name: Create docker-compose.yml from template
      ansible.builtin.template:
        dest: "/opt/{{ app_name }}/docker-compose.yml"
        src: "templates/docker-compose.yml.j2"
        mode: '0644'

    - name: Pull Docker image
      community.docker.docker_image:
        name: "{{ docker_image }}"
        source: pull
      register: pull_result
      until: pull_result is success
      retries: 3
      delay: 10

    - name: Deploy containers
      community.docker.docker_compose_v2:
        project_src: "/opt/{{ app_name }}"
        state: present
        pull: yes
        recreate: always
        build: no

    - name: Verify container is running
      ansible.builtin.uri:
        url: "http://localhost:{{ app_port }}"
        status_code: 200
        timeout: 30
      register: result
      until: result.status == 200
      retries: 10
      delay: 5
      changed_when: false